@model WebAppLayer.Models.Usuario

@{
    ViewBag.Title = "Criar Conta de Funcionário";
    var erro = ViewBag.Erro;
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h2>Cadastrar Funcionário</h2>
    <hr />
    @if (!string.IsNullOrWhiteSpace(erro))
    {
        <div class="alert alert-danger" role="alert">
            @erro
        </div>
    }

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.PessoaUsuaria.NomeCompleto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PessoaUsuaria.NomeCompleto, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PessoaUsuaria.NomeCompleto, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("model.Pessoa.Usuaria.DataNascimento", "Data Nascimento", htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.PessoaUsuaria.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PessoaUsuaria.DataNascimento, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PessoaUsuaria.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PessoaUsuaria.CPF, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PessoaUsuaria.CPF, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PessoaUsuaria.Endereco.CEP, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PessoaUsuaria.Endereco.CEP, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PessoaUsuaria.Endereco.CEP, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PessoaUsuaria.Endereco.Rua, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PessoaUsuaria.Endereco.Rua, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PessoaUsuaria.Endereco.Rua, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PessoaUsuaria.Endereco.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PessoaUsuaria.Endereco.Bairro, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PessoaUsuaria.Endereco.Bairro, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PessoaUsuaria.Endereco.Cidade, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PessoaUsuaria.Endereco.Cidade, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PessoaUsuaria.Endereco.Cidade, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PessoaUsuaria.Endereco.UF, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PessoaUsuaria.Endereco.UF, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PessoaUsuaria.Endereco.UF, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Criar Cona" class="btn btn-default Botao" />
        </div>
    </div>
</div>

}
<div>
    @Html.ActionLink("Voltar", "Login")
</div>
                          /div>
